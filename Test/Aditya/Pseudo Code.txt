// Pseudocode for Processing Chat Data and Storing in a DataFrame

// Start by navigating to the main directory, named after today's date
Navigate to Main Directory (Today's Date)

// Loop through each team folder within the main directory
For each Team Folder in Main Directory:
    
    // Loop through each employee folder within the current team folder
    For each Employee Folder in Team Folder:
        
        // Loop through each chat file within the current employee folder
        For each Chat File in Employee Folder:
            
            // Initialize a DataFrame to store chat details
            Initialize DataFrame for Chat Details

            // Store various details in the DataFrame
            DataFrame[0,1] = Main Directory Name (Today's Date)
            DataFrame[0,2] = Current Team Folder Name
            DataFrame[0,3] = Current Employee Folder Name
            DataFrame[0,4] = Chat File Name
            
            // For Day 0 -  it will go inside the chat and check the chats that are done yesterday and give the time spent by Employee 
                            in the chat yesterday i.e today()-1
                            //Logic for time spent - get all the chats for the today()-1 date and then calculate the length of all the text send by Employee yesterday. and then divide it by 5 which acc to my maths will give me the seconds of how much time it will took him to write that text(so if let's say we set the default data that for 10 character it took all our employees 5 seconds, then we can calculate the time spend by gettting the text.length/5. Now these seconds we have to store in Day 0 like - 00:00:20 means 20 sec and if time spend it 30 mins then it will store the data as 00:30:00 (and how to get the text only from the chat- as you know in whatsapp chat export, we have date first, then name of sender and the chat, so we can fetch the text only using regex
            DataFrame[0,5] = Day 0(Employee)
            
  

             // For Day 1 -  it will go inside the chat and check the chats that are done today()-2 and give the time spent by Employee 
                            in the chat today()-2
                            //Logic for time spent - get all the chats for the today()-2 date and then calculate the length of all the text send by Employee today()-2. and then divide it by 5 which acc to my maths will give me the seconds of how much time it will took him to write that text(so if let's say we set the default data that for 10 character it took all our employees 5 seconds, then we can calculate the time spend by gettting the text.length/5. Now these seconds we have to store in Day 0 like - 00:00:20 means 20 sec and if time spend it 30 mins then it will store the data as 00:30:00 
            DataFrame[0,6] = Day 1(Employee)


             // For Day 2 -  it will go inside the chat and check the chats that are done today()-3 and give the time spent by Employee 
                            in the chat today()-3
                            //Logic for time spent - get all the chats for the today()-3 date and then calculate the length of all the text send by Employee today()-3. and then divide it by 5 which acc to my maths will give me the seconds of how much time it will took him to write that text(so if let's say we set the default data that for 10 character it took all our employees 5 seconds, then we can calculate the time spend by gettting the text.length/5. Now these seconds we have to store in Day 0 like - 00:00:20 means 20 sec and if time spend it 30 mins then it will store the data as 00:30:00 
            DataFrame[0,7] = Day 2(Employee)


            // for this Day Indicator-it will see the chat start date - for example we want to generate the report for 18 
               Nov 2023 and store it in var reportDate = 18 Nov 2023, then if chat start date is reportDate()-1 ,then it will store the value as Day0, if chat start date is reportDate()-2, then it will store the value as Day1, and if the chat start is reportDate()-3, then it will store the Day indicator as Day 2.
            DataFrame[0,8] = Day Indicator




            // for calculating total time spent - it will simply paste  Day 0(Employee) time here
            DataFrame[0,9] = Total Time Spent(Employee)

            //Lead Response should be calculated based on the Total Time Spent(Employee) and Total Time Spent(Student), so by lead response I want to calculate how active is our client while taking, and for example sometimes Total Time Spent(Employee) is 00:00:00, then it means it is a missed reply by Employye then lead response is 100
            DataFrame[0,10] = Lead Response

            //By Broken chat it means if we are making report for 18Nov2023, then on 18Nov2023,let's say there is conversation between Employee and Student/Client, then at the end who is the sender, if the last text is from Student on 18 Nov 2023, then there is a broken Chat by Employee, then it will mark Broken Chat as Yes, else no.
            DataFrame[0,11] = Broken Chat(Employee)

            //BY missed Reply. it  means if we are making report for 18Nov2023, then on 18Nov2023,let's say there is some text from the student, but there is no text from the employee on
               this date, then it is a missed reply from Employee, so it will mark this as Yes, Else no.
            DataFrame[0,12] = Missed Replies(Employee)

            //For  Total Count of Broken Chats - it will go through all the chat for each date and apply the Broken Chat(Employee) logic for all the dates that are there in chat and give the count of Broken Chat, so if for the whle week there is a broken Chat from the employee, then it will store here 7
            DataFrame[0,13] = Total Count of Broken Chats(Employee)

            //For  Total Count of Missed Replies - it will go through all the chat for each date and apply the Broken Chat(Employee) logic for all the dates that are there in chat  and give the count of Missed Replies, so if for the whole week there is a Missed Reply from the employee, then it will store here 7
            DataFrame[0,14] = Total Count of Missed Replies(Employee)

            //Here it will go through all the chat or as you know we are going through all the chat again and see the Max time spent is on which date by Employee. and paste the date here
            DataFrame[0,15] = Date of Max time


                        // For Day 0 -  it will go inside the chat and check the chats that are done yesterday and give the time spent by Student/Client/any other sender than Employee
                            in the chat yesterday i.e today()-1
                            //Logic for time spent - get all the chats for the today()-1 date and then calculate the length of all the text send by Student/Client/any other sender than Employee yesterday. and then divide it by 5 which acc to my maths will give me the seconds of how much time it will took him to write that text(so if let's say we set the default data that for 10 character it took all our Student/Client/any other sender than Employee 5 seconds, then we can calculate the time spend by gettting the text.length/5. Now these seconds we have to store in Day 0 like - 00:00:20 means 20 sec and if time spend it 30 mins then it will store the data as 00:30:00 (and how to get the text only from the chat- as you know in whatsapp chat export, we have date first, then name of sender and the chat, so we can fetch the text only using regex
            DataFrame[0,16] = Day 0 (Student)


             // For Day 1 -  it will go inside the chat and check the chats that are done today()-2 and give the time spent by Student/Client/any other sender than Employee
                            in the chat today()-2
                            //Logic for time spent - get all the chats for the today()-2 date and then calculate the length of all the text send by Student/Client/any other sender than Employee today()-2. and then divide it by 5 which acc to my maths will give me the seconds of how much time it will took him to write that text(so if let's say we set the default data that for 10 character it took all our Student/Client/any other sender than Employee 5 seconds, then we can calculate the time spend by gettting the text.length/5. Now these seconds we have to store in Day 0 like - 00:00:20 means 20 sec and if time spend it 30 mins then it will store the data as 00:30:00 
            DataFrame[0,17] = Day 1 (Student)


             // For Day 2 -  it will go inside the chat and check the chats that are done today()-3 and give the time spent by Student/Client/any other sender than Employee
                            in the chat today()-3
                            //Logic for time spent - get all the chats for the today()-3 date and then calculate the length of all the text send by Student/Client/any other sender than Employee today()-3. and then divide it by 5 which acc to my maths will give me the seconds of how much time it will took him to write that text(so if let's say we set the default data that for 10 character it took all our Student/Client/any other sender than Employee 5 seconds, then we can calculate the time spend by gettting the text.length/5. Now these seconds we have to store in Day 0 like - 00:00:20 means 20 sec and if time spend it 30 mins then it will store the data as 00:30:00 
            DataFrame[0,18] = Day 2 (Student)

            
            // for calculating total time spent - it will simply paste Day 0 time here

            //// for calculating total time spent - it will simply paste  Day 0(Student) time here
            DataFrame[0,20] = Total Time Spent (Student)
             
            //By Broken chat it means if we are making report for 18Nov2023, then on 18Nov2023,let's say there is conversation between Employee and Student/Client, then at the end who is the sender, if the last text is from Employee on 18 Nov 2023, then there is a broken Chat by Student, then it will mark Broken Chat as Yes, else no.
            DataFrame[0,22] = Broken Chat (Student)

            
            //For  Total Count of Missed Replies - it will go through all the chat for each date and apply the Broken Chat(Student) logic for all the dates that are there in chat  and give the count of Missed Replies, so if for the whole week there is a Missed Reply from the employee, then it will store here 7
            DataFrame[0,23] = Missed Replies (Student)

             //BY missed Reply. it  means if we are making report for 18Nov2023, then on 18Nov2023,let's say there is some text from the Employee but there is no text from the Student on
               this date, then it is a missed reply from Student so it will mark this as Yes, Else no.

//For  Total Count of Broken Chats - it will go through all the chat for each date and apply the Broken Chat(Employee) logic for all the dates that are there in chat and give the count of Broken Chat, so if for the whle week there is a broken Chat from the employee, then it will store here 7
            DataFrame[0,13] = Total Count of Broken Chats(

            //For  Total Count of Missed Replies - it will go through all the chat for each date and apply the Broken Chat(Employee) logic for all the dates that are there in chat  and give the count of Missed Replies, so if for the whole week there is a Missed Reply from the employee, then it will store here 7
            DataFrame[0,14] = Total Count of Missed Replies

            //Here it will go through all the chat or as you know we are going through all the chat again and see the Max time spent is on which date by Employee. and paste the date here
            DataFrame[0,15] = Date of Max time

            // Move to the next chat file in the current employee folder
            Continue to Next Chat File

        // Once all chats in an employee folder are processed, move to the next employee
        Continue to Next Employee Folder

    // Once all employees in a team are processed, move to the next team folder
    Continue to Next Team Folder

// End of process